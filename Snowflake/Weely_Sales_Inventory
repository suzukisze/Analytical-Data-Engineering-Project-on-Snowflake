SET LAST_SOLD_WK_SK = (SELECT MAX(SOLD_WK_SK) FROM SF_TPCDS.ANALYTICS.WEEKLY_SALES_INVENTORY);

DELETE FROM SF_TPCDS.ANALYTICS.WEEKLY_SALES_INVENTORY WHERE SOLD_WK_SK=$LAST_SOLD_WK_SK;

CREATE OR REPLACE TRANSIENT TABLE SF_TPCDS.ANALYTICS.WEEKLY_SALES_INVENTORY_TMP AS(
with aggregating_daily_sales_to_week as(
SELECT 
    WAREHOUSE_SK,
    ITEM_SK,
    MAX(SOLD_DATE_SK) AS SOLD_WK_SK,
    SOLD_WK_NUM,
    SOLD_YR_NUM,
    SUM(DAILY_QTY) AS SUM_QTY_WK,
    SUM(DAILY_SALES_AMT) AS SUM_AMT_WK,
    SUM(DAILY_PROFIT) AS SUM_PROFIT_WK
FROM
    SF_TPCDS.INTERMEDIATE.DAILY_AGGREGATED_SALES
GROUP BY
    1,2,4,5
HAVING 
    sold_wk_sk >= NVL($LAST_SOLD_WK_SK,0)
)

SELECT
    WAREHOUSE_SK,
    ITEM_SK,
    MAX(SOLD_WK_SK) AS SOLD_WK_SK,
    SOLD_WK_NUM AS SOLD_WK_NUM,
    SOLD_YR_NUM AS SOLD_YR_NUM,
    SUM(SUM_QTY_WK) AS SUM_QTY_WK,
    SUM(SUM_AMT_WK) AS SUM_AMT_WK,
    SUM(SUM_PROFIT_WK) AS SUM_PROFIT_WK,
    SUM(SUM_QTY_WK)/7 AS AVG_QTY_DY,
    SUM(COALESCE(inv.INV_QUANTITY_ON_HAND, 0)) AS INV_QTY_WK,
    SUM(COALESCE(inv.INV_QUANTITY_ON_HAND, 0)) / SUM(SUM_QTY_WK) AS WKS_SPLY,
    IFF(AVG_QTY_DY>0 AND AVG_QTY_DY>INV_QTY_WK, TRUE, FALSE) AS LOW_STOCK_FLG_WK
FROM aggregating_daily_sales_to_week
left join tpcds.raw.inventory inv
    on inv_date_sk = sold_wk_sk and item_sk = inv_item_sk and inv_warehouse_sk = warehouse_sk
group by 1, 2, 4, 5
having sum(sum_qty_wk) > 0
);

INSERT INTO SF_TPCDS.ANALYTICS.WEEKLY_SALES_INVENTORY
(
    WAREHOUSE_SK,
    ITEM_SK,
    SOLD_WK_SK,
    SOLD_WK_NUM,
    SOLD_YR_NUM,
    SUM_QTY_WK,
    SUM_AMT_WK,
    SUM_PROFIT_WK,
    AVG_QTY_DY,
    INV_QTY_WK,
    WKS_SPLY,
    LOW_STOCK_FLG_WK
)
SELECT 
    DISTINCT
    WAREHOUSE_SK,
    ITEM_SK,
    SOLD_WK_SK,
    SOLD_WK_NUM,
    SOLD_YR_NUM,
    SUM_QTY_WK,
    SUM_AMT_WK,
    SUM_PROFIT_WK,
    AVG_QTY_DY,
    INV_QTY_WK,
    WKS_SPLY,
    LOW_STOCK_FLG_WK
FROM SF_TPCDS.ANALYTICS.WEEKLY_SALES_INVENTORY_TMP;

drop table SF_TPCDS.ANALYTICS.WEEKLY_SALES_INVENTORY_TMP
